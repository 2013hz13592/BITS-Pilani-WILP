; PROGRAM TO MERGE TWO STRING FROM MEMORY    
; PRASENJIT DAS
; 2013HT13592
	AREA RESET, CODE, READONLY
	ENTRY
START 
; ASSIGN MEMORY ADDRESS TO REGISTER
      ADR R3,STRING1
	  ADR R4,STRING2
	  LDR R5,=OUTPUT
	  BL SUB1
STOP B STOP
; LOOP TO FETCH FIRST STRING
SUB1
; LOAD ONE BYTE FROM INPUT MEMORY AREA TO REGISTER
	LDRB R0,[R3],#1
	CMP R0,#0
; BRANCH TO NEXT STRING WHEN 0x00 IS FOUND	
	BEQ SUB2
; ELSE LOAD ONE BYTE FROM OUTPUT AREA TO THE REGISTER
	LDRB R1,[R5,#-1]
; COMPARE THE INPUT STRING CHARACTER WITH THE OUTPUT STRING CHARACTER
	CMP R0,R1
; SAVE THE VARIABLES BEFORE CALLING MERGE ROUTINE
; SAVE THE OUTPUT STRING MEMORY LOCATION
	MOV R2,R5
; UNSET THE CALL THAT INDICATES MERGE ROUTINE WAS CALLED
	MOV R6,#0
; SAVE THE CONTENTS OF LINK REGISTER	
	MOV R7,LR
; JUMP TO MERGE ROUTINE
	BLLT MERGE
; RESTORE THE CONTENTS OF THE LINK REGISTER
	MOV LR,R7
; IF CALL HAS BEEN MADE THE INPUT BYTE HAS ALREADY BEEN STORED IN OUTPUT
	CMP R6,#0
; JUMP TO PROCESSING OF NEXT CHARACTER	
	BNE SUB1
; ELSE STORE THE CONTENTS OF REGISTER IN THE OUTPUT AREA
	STRB R0,[R5],#1
	B SUB1
MERGE
; SET FLAG FOR CALL
	MOV R6,#1
; SHIFT THE BYTE FETCHED FROM MEMORY UP BY ONE BYTE
    STRB R1,[R5]
; LOAD THE NEXT LOWER BYTE TO REGISTER	
	LDRB R1,[R5,#-2]!
	ADD R5,#1
; COMPARE WITH THE INPUT BYTE	
	CMP R0,R1
; CONTINUE SHIFTING IF INPUT BYTE IS LESS THAN OUTPUT BYTE	
	BLT MERGE
; STORE THE INPUT BYTE TO THE CORRECT POSITION IN THE OUTPUT AREA	
	STRB R0, [R5]
; RESTORE THE OUTPUT AREA ADDRESS TO THE FREE SLOT
	ADD R2,#1
	MOV R5,R2
; RETURN TO CALLING PROGRAM
	MOV PC,R14
; LOOP TO FETCH SECOND STRING
SUB2
; LOAD ONE BYTE FROM INPUT MEMORY AREA TO REGISTER
	LDRB R0,[R4],#1
	CMP R0,#0
; EXIT WHEN 0x00 IS FOUND	
	BEQ AFT
; ELSE LOAD ONE BYTE FROM OUTPUT AREA TO THE REGISTER
	LDRB R1,[R5,#-1]
; COMPARE THE INPUT STRING CHARACTER WITH THE OUTPUT STRING CHARACTER
	CMP R0,R1
; SAVE THE VARIABLES BEFORE CALLING MERGE ROUTINE
; SAVE THE OUTPUT STRING MEMORY LOCATION
	MOV R2,R5
; UNSET THE CALL THAT INDICATES MERGE ROUTINE WAS CALLED
	MOV R6,#0
; SAVE THE CONTENTS OF LINK REGISTER
	MOV R7,LR
; JUMP TO MERGE ROUTINE
	BLLT MERGE
; RESTORE THE CONTENTS OF THE LINK REGISTER
	MOV LR,R7
; IF CALL HAS BEEN MADE THE INPUT BYTE HAS ALREADY BEEN STORED IN OUTPUT
	CMP R6,#0
; JUMP TO PROCESSING OF NEXT CHARACTER
	BNE SUB2	
; ELSE STORE THE CONTENTS OF REGISTER IN THE OUTPUT AREA	
	STRB R0,[R5],#1
	B SUB2
AFT MOV PC,LR
STRING1 DCB "HELLO",0
STRING2 DCB "WORLD",0
	AREA RES,DATA,READWRITE
OUTPUT DCB ""
	END